[versions]
kotlin = "1.9.22"
kotlinxCoroutines = "1.7.3"
kotest = "5.8.0"
springBoot = "3.2.2"
springDependency = "1.1.4"
ehcache = "3.10.8"
kotestSpringExtensions = "1.1.3"
mockk = "1.13.9"

[libraries]
springBoot-starterWeb = { module = "org.springframework.boot:spring-boot-starter-web" }
springBoot-starterWebflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
springBoot-starterLog4j2 = { module = "org.springframework.boot:spring-boot-starter-log4j2" }
springBoot-starterCache = { module = "org.springframework.boot:spring-boot-starter-cache" }
springBoot-staterThymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf" }
springBoot-starterDataMongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb"}
springBoot-starterDataJPA = { module = "org.springframework.boot:spring-boot-starter-data-jpa"}
springBoot-configurationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
springBoot-starterActuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
springBoot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
springBoot-staterTest = { module = "org.springframework.boot:spring-boot-starter-test" }
springBoot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
ehcache = { module = "org.ehcache:ehcache", version.ref = "ehcache" }
postgresql = { module = "org.postgresql:postgresql" }

jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }

testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb" }

kotest-runnerJunit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-extensionsJVM = { module = "io.kotest:kotest-extensions-jvm", version.ref = "kotest" }
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertionsJson = { module = "io.kotest:kotest-assertions-json", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-extensions-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotestSpringExtensions" }

io-mockk = { module = "io.mockk:mockk", version.ref = "mockk"}

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-compiler-plugin-allOpen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-compiler-plugin-noArg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin" }
kotlin-compiler-plugin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-compiler-plugin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }

springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDependency = { id = "io.spring.dependency-management", version.ref = "springDependency"}